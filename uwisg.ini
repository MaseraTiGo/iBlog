# uwsig使用配置文件启动
[uwsgi]
# 项目所在的根目录
chdir=/root/iblog
# 指定项目的application,区别于启动命令--wsgi-filemysite/wsgi.py
module=blog.wsgi:application
#the local unix socket file than commnuincate to Nginx
# 指定sock的文件路径，这个sock文件会在nginx的uwsgi_pass配置，用来nginx与uwsgi通信       
# 支持ip+port模式以及socket file模式
#socket=%(chdir)/uwsgi_conf/uwsgi.sock
socket= 172.17.0.12:9012
# 进程个数       
processes = 4
# 每个进程worker数
workers=5
procname-prefix-spaced=blog                # uwsgi的进程名称前缀
py-autoreload=1                              # py文件修改，自动加载

# 指定IP端口，web访问入口
#http=0.0.0.0:9000

# 指定多个静态文件：static目录和media目录,也可以不用指定该静态文件，在nginx中配置静态文件目录
# uwsgi有自己的配置语法，详细可参考官网，无需写绝对路径，可以用循环、判断等高级配置语法
for =static media
static-map=/static= /root/iblog/static/
endfor =

# 启动uwsgi的用户名和用户组
uid=root
gid=root

# 启用主进程
master=true
# 自动移除unix Socket和pid文件当服务停止的时候
vacuum=true

# 序列化接受的内容，如果可能的话
thunder-lock=true
# 启用线程
enable-threads=true
# 设置一个超时，用于中断那些超过服务器请求上限的额外请求
harakiri=30
# 设置缓冲
post-buffering=4096

#虚拟环境路径
virtualenv = /root/iblogv/
# 设置日志目录
daemonize=/root/logs/ibloguwsgi.log
# uWSGI进程号存放
pidfile=/root/conf/uwsgi.pid
#monitor uwsgi status  通过该端口可以监控 uwsgi 的负载情况
# 支持ip+port模式以及socket file模式
# stats=root/conf/uwsgi.status 
#stats = 172.17.0.12:9012
